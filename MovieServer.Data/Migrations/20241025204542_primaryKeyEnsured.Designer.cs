// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieServer.Data.DAO;

#nullable disable

namespace MovieServer.Data.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20241025204542_primaryKeyEnsured")]
    partial class primaryKeyEnsured
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieServer.Data.Entities.GenomeScoreEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("movieId")
                        .HasColumnType("bigint");

                    b.Property<double>("relevance")
                        .HasColumnType("float");

                    b.Property<long>("tagId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("GenomeScores");
                });

            modelBuilder.Entity("MovieServer.Data.Entities.GenomeTagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("tagId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("GenomeTags");
                });

            modelBuilder.Entity("MovieServer.Data.Entities.LinkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("imdbId")
                        .HasColumnType("bigint");

                    b.Property<long?>("movieId")
                        .HasColumnType("bigint");

                    b.Property<long?>("tmdbId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("MovieServer.Data.Entities.MovieEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("movieId")
                        .HasColumnType("bigint");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieServer.Data.Entities.RatingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("movieId")
                        .HasColumnType("bigint");

                    b.Property<float>("rating")
                        .HasColumnType("real");

                    b.Property<long>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<long>("userId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MovieServer.Data.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("movieId")
                        .HasColumnType("bigint");

                    b.Property<string>("tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("timestamp")
                        .HasColumnType("bigint");

                    b.Property<long>("userId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
